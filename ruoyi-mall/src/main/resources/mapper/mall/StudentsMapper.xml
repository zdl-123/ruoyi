<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.mall.mapper.StudentsMapper">
    
    <resultMap type="Students" id="StudentsResult">
        <result property="id"    column="student_id"    />
        <result property="name"    column="student_name"    />
        <result property="age"    column="student_age"    />
        <result property="hobby"    column="student_hobby"    />
        <result property="sex"    column="student_sex"    />
        <result property="status"    column="student_status"    />
        <result property="birthday"    column="student_birthday"    />
    </resultMap>

    <sql id="selectStudentsVo">
        select student_id, student_name, student_age, student_hobby, student_sex, student_status, student_birthday from stu
    </sql>

    <select id="selectStudentsList" parameterType="Students" resultMap="StudentsResult">
        <include refid="selectStudentsVo"/>
        <where>  
            <if test="name != null  and name != ''"> and student_name like concat('%', #{name}, '%')</if>
            <if test="age != null "> and student_age = #{age}</if>
            <if test="hobby != null  and hobby != ''"> and student_hobby like concat('%', #{hobby}, '%')</if>
            <if test="sex != null  and sex != ''"> and student_sex = #{sex}</if>
            <if test="status != null  and status != ''"> and student_status = #{status}</if>
            <if test="birthday != null "> and student_birthday = #{birthday}</if>
        </where>
    </select>
    
    <select id="selectStudentsById" parameterType="Long" resultMap="StudentsResult">
        <include refid="selectStudentsVo"/>
        where student_id = #{id}
    </select>
        
    <insert id="insertStudents" parameterType="Students" useGeneratedKeys="true" keyProperty="id">
        insert into stu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">student_dsqq  read name,</if>
            <if test="age != null">student_age,</if>
            <if test="hobby != null">student_hobby,</if>
            <if test="sex != null">student_sex,</if>
            <if test="status != null">student_status,</if>
            <if test="birthday != null">student_birthday,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="age != null">#{age},</if>
            <if test="hobby != null">#{hobby},</if>
            <if test="sex != null">#{sex},</if>
            <if test="status != null">#{status},</if>
            <if test="birthday != null">#{birthday},</if>
         </trim>
    </insert>

    <update id="updateStudents" parameterType="Students">
        update stu
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">student_name = #{name},</if>
            <if test="age != null">student_age = #{age},</if>
            <if test="hobby != null">student_hobby = #{hobby},</if>
            <if test="sex != null">student_sex = #{sex},</if>
            <if test="status != null">student_status = #{status},</if>
            <if test="birthday != null">student_birthday = #{birthday},</if>
        </trim>
        where student_id = #{id}
    </update>

    <delete id="deleteStudentsById" parameterType="Long">
        delete from stu where student_id = #{id}
    </delete>

    <delete id="deleteStudentsByIds" parameterType="String">
        delete from stu where student_id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>